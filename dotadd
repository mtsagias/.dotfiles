#!/usr/bin/env ruby
require 'yaml'
require 'pathname'
require 'fileutils'

include FileUtils

DOTFILES = '~/.dotfiles'
CONF_FILE = 'install.conf.yaml'
@options = {}
# @options = { noop: true, verbose: true } # Uncomment this line to debug

@dot_files = Pathname.new(File.expand_path(DOTFILES))
return unless @dot_files.exist? && @dot_files.directory?

def self.move_item(dot, name)
  parent = Pathname.new(@dot_files + name).parent
  mkdir_p(parent) unless File.exist?(parent)
  mv(dot + name, @dot_files + name, @options.merge(force: true))
end

def self.link_item(dot, name)
  ln_s(@dot_files + name, dot + name, @options)
end

def self.update_conf(dot, name)
  conf = YAML.load_file(@dot_files + CONF_FILE)
  conf.last['link']['~/' + dot + name] = {
    'path' => name.to_s,
    'create' => File.directory?(dot + name),
    'relink' => false,
    'force' => false
  }
  File.open(@dot_files + CONF_FILE, 'w') { |file| YAML.dump(conf, file) }
end

ARGV.each do |arg|
  next unless File.exist?(arg)
  name = arg.dup
  dot = name[0] == '.' ? name.slice!(0) : ''
  if File.exist?(@dot_files + name)
    puts "#{@dot_files + name} already exists. Moving on."
    next
  end
  move_item(dot, name)
  link_item(dot, name)
  update_conf(dot, name)
  puts "Moved and symlinked #{dot + name}"
end
